#!/bin/bash
# Copyright (c) 2021 VMware, Inc. All rights reserved.

duration=1m
max=25
log_off=0
out=/tmp

usage()
{
    echo ""
    echo "Usage: $0 [OPTIONS] [VALUE]"
    echo "OPTIONS:"
    echo -e "  -D | --Duration\tRun time duration. Format: 1s, 1m, 1h. Default: 1m"
    echo -e "  -E | --Expect-max\tExpected max threshold. Format: number in usec. Default: 25"
    echo -e "  -l | --log-off\tDo not keep log file to save space"
    echo -e "  -o | --output\t\tOutput folder. Default: /tmp"
    echo -e "  -h | --help\t\tprint help"
    exit 1 # Exit script after printing help
}

while [ "${1:-}" != "" ]; do
    case $1 in
        -D|--Duration)
            shift
            duration=$1
            ;;
        -E|--Expect-max)
            shift
            max=$1
            ;;
        -l|--log-off)
            log_off=1
            ;;
        -o|--output)
            shift
            out=$1
            mkdir -p $out
            ;;
        -h|--help)
            usage
            ;;
        --)
            shift
            break
            ;;
        *)
            usage
            ;;
    esac
    shift
done

echo "Duration="$duration
echo "Expected-max="$max
echo "log-off="$log_off
echo "out="$out

echo "run-cyclic-test -D $duration"
if [ $log_off -eq 1 ]; then
    run-cyclic-test -D $duration > /dev/null
else
    run-cyclic-test -D $duration > cyclictest.log
fi

cyclictest-plot-80us cyclictest.hist > cyclictest.result
cyclictest-hist-to-percentiles cyclictest.hist
hdr-plot --output cyclictest.hgrm.hdr-plot.png cyclictest.hgrm

cp cyclictest.result $out
cp cyclictest.hist-plot.png $out
cp cyclictest.hgrm.hdr-plot.png $out

tail -3 cyclictest.result

max_latency=$(tail -1 cyclictest.result | grep -Eo '[0-9]+$')

if [[ $max_latency -le $max ]]; then
    echo "Success: Max latency $max_latency <= $max usec"
    exit 0
else
    echo "Failure: Max latency $max_latency > $max usec"
    exit 1
fi
